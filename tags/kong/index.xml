<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Kong on xvnpw personal blog</title><link>https://xvnpw.github.io/tags/kong/</link><description>Recent content in Kong on xvnpw personal blog</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Sat, 27 Nov 2021 22:59:05 +0100</lastBuildDate><atom:link href="https://xvnpw.github.io/tags/kong/index.xml" rel="self" type="application/rss+xml"/><item><title>Bug bounty tips for nginx $request_uri path traversal bypass</title><link>https://xvnpw.github.io/posts/bug_bounty_tips_for_nginx_request_uri_path_traversal_bypass/</link><pubDate>Sat, 27 Nov 2021 22:59:05 +0100</pubDate><guid>https://xvnpw.github.io/posts/bug_bounty_tips_for_nginx_request_uri_path_traversal_bypass/</guid><description>&lt;figure class="image-center">&lt;img src="https://user-images.githubusercontent.com/17719543/139592951-0fafc921-437e-4bb7-b0ee-199dd72b36c3.png">
&lt;/figure>

&lt;p>In this article, I will extend topic by bug bounty tips for weaknesses in authentication/authorization implementation in relation to nginx&amp;rsquo;s &lt;code>$request_uri&lt;/code> variable.&lt;/p>
&lt;h2 id="apis">APIs&lt;/h2>
&lt;p>This vulnerability is for APIs. Best scenario are &lt;strong>microservice&lt;/strong> deployed to Kubernetes and exposed by ingress controller.&lt;/p>
&lt;h2 id="using-paths">Using paths&lt;/h2>
&lt;p>API that you are playing with, need to use paths to address services, e.g.:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>OK!
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>https://api.example.com/user-service
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>https://api.example.com/customer-service
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>NOT OK!
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>https://user.example.com/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>https://customer.example.com/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>First set of URLs is good for exploitation, as you can try sending request with &lt;code>https://api.example.com/user-service/..%2F/customer-service/endpoint1&lt;/code>&lt;/p></description></item><item><title>Path traversal in authorization context in Kong and F5 NGINX</title><link>https://xvnpw.github.io/posts/path_traversal_in_authorization_context_in_kong_and_f5_nginx/</link><pubDate>Thu, 25 Nov 2021 20:49:02 +0100</pubDate><guid>https://xvnpw.github.io/posts/path_traversal_in_authorization_context_in_kong_and_f5_nginx/</guid><description>&lt;figure class="image-center">&lt;img src="https://user-images.githubusercontent.com/17719543/139592951-0fafc921-437e-4bb7-b0ee-199dd72b36c3.png">
&lt;/figure>

&lt;p>In this part I will research another ingress controller based on &lt;strong>nginx&lt;/strong>: 🦍 &lt;a href="https://konghq.com/solutions/kubernetes-ingress/">kong&lt;/a>. At the end of article I will mention in short &lt;a href="https://www.nginx.com/products/nginx-ingress-controller">F5 NGINX Ingress Controller&lt;/a>.&lt;/p>
&lt;p>In kong there is no explicit feature called external authentication, but developers gave possibility to create it using plugins.&lt;/p>
&lt;p>Here are some links describing this process:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://konghq.com/blog/custom-authentication-and-authorization-framework-with-kong/">Custom Authentication and Authorization Framework with Kong&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/aunkenlabs/kong-external-auth">aunkenlabs/kong-external-auth&lt;/a> - repository with PoC of external-auth. It&amp;rsquo;s old and cannot be run as it with kong 2.6, which is latest at time of writing.&lt;/li>
&lt;/ul>
&lt;p>During analysis I have found two possible exploitation paths:&lt;/p></description></item></channel></rss>