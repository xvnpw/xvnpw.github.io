<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Java on xvnpw personal blog</title><link>https://xvnpw.github.io/tags/java/</link><description>Recent content in Java on xvnpw personal blog</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Fri, 17 Jul 2020 10:14:47 +0100</lastBuildDate><atom:link href="https://xvnpw.github.io/tags/java/index.xml" rel="self" type="application/rss+xml"/><item><title>Hacking SpEL</title><link>https://xvnpw.github.io/posts/hacking-spel/</link><pubDate>Fri, 17 Jul 2020 10:14:47 +0100</pubDate><guid>https://xvnpw.github.io/posts/hacking-spel/</guid><description>&lt;p>This story will explain how to find and exploit SpEL parser in web applications based on Java language.&lt;/p>
&lt;p>What is SpEL ? From Spring documentation:&lt;/p>
&lt;blockquote>
&lt;p>The Spring Expression Language (SpEL for short) is a powerful expression language that supports querying and manipulating an object graph at runtime.&lt;/p>
&lt;/blockquote>
&lt;p>Where is it used ?&lt;/p>
&lt;ol>
&lt;li>Spring Framework: Security, Data, …&lt;/li>
&lt;li>&lt;strong>Any place developers use it by SpEL API&lt;/strong>&lt;/li>
&lt;li>For languages it can be used in Java, Kotlin, Scala, and other JVM based technologies.&lt;/li>
&lt;/ol>
&lt;p>First point is known by issues in past like: &lt;a href="https://tanzu.vmware.com/security/cve-2018-1273">CVE-2018–1273&lt;/a>, &lt;a href="https://tanzu.vmware.com/security/cve-2017-8046">CVE-2017–8046&lt;/a> or CVE-2011–2730. I will not talk about them, I will focus on point number two.&lt;/p></description></item></channel></rss>