<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Fabric on xvnpw personal blog</title><link>https://xvnpw.github.io/tags/fabric/</link><description>Recent content in Fabric on xvnpw personal blog</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Wed, 30 Oct 2024 11:59:02 +0100</lastBuildDate><atom:link href="https://xvnpw.github.io/tags/fabric/index.xml" rel="self" type="application/rss+xml"/><item><title>Create design documents with Fabric</title><link>https://xvnpw.github.io/posts/fabric_design_documents/</link><pubDate>Wed, 30 Oct 2024 11:59:02 +0100</pubDate><guid>https://xvnpw.github.io/posts/fabric_design_documents/</guid><description>&lt;p>I encountered a challenge in creating high-quality design documents for my threat modeling research. About a year and a half ago, I created &lt;a href="https://github.com/xvnpw/ai-nutrition-pro-design-gpt3.5/blob/main/ARCHITECTURE.md">AI Nutrition-Pro&lt;/a> architecture and have been using it since then. What if it&amp;rsquo;s already in LLMs&amp;rsquo; training data? Testing threat modeling capabilities could give me false results.&lt;/p>
&lt;p>I developed several prompts to assist with the challenging task of creating design documents. I implemented these as &lt;a href="https://github.com/danielmiessler/fabric">Fabric&lt;/a> patterns for everyone&amp;rsquo;s benefit. If you&amp;rsquo;re unfamiliar with Fabric - it&amp;rsquo;s an excellent CLI tool created by &lt;a href="https://danielmiessler.com">Daniel Miessler&lt;/a>.&lt;/p></description></item><item><title>Threat Modelling with Fabric Framework</title><link>https://xvnpw.github.io/posts/threat_modelling_with_fabric_framework/</link><pubDate>Mon, 03 Jun 2024 16:59:02 +0100</pubDate><guid>https://xvnpw.github.io/posts/threat_modelling_with_fabric_framework/</guid><description>&lt;p>&lt;a href="https://github.com/danielmiessler/fabric">Fabric&lt;/a> is a framework that puts AI at your fingertips. Instead of diving into chat interfaces (e.g., ChatGPT) or writing custom programs that consume APIs, you can create prompts as markdown text and receive output in markdown. Fabric also maintains a database of prompts called &lt;a href="https://github.com/danielmiessler/fabric/tree/main/patterns">patterns&lt;/a>.&lt;/p>
&lt;figure class="image-center">&lt;img src="https://github.com/xvnpw/xvnpw.github.io/assets/17719543/4fe91d36-3736-4cbf-9835-edfa3943116e" width="300">
&lt;/figure>

&lt;p>With the new pattern &lt;a href="https://github.com/danielmiessler/fabric/blob/main/patterns/create_stride_threat_model/system.md">create_stride_threat_model&lt;/a>, you can easily create threat models. Let&amp;rsquo;s dive deeper into how to use this new pattern and evaluate the quality of the results.&lt;/p></description></item></channel></rss>