<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Screenshot-to-Code on xvnpw personal blog</title><link>https://xvnpw.github.io/tags/screenshot-to-code/</link><description>Recent content in Screenshot-to-Code on xvnpw personal blog</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Fri, 14 Feb 2025 16:00:00 +0100</lastBuildDate><atom:link href="https://xvnpw.github.io/tags/screenshot-to-code/index.xml" rel="self" type="application/rss+xml"/><item><title>Can AI Actually Find Real Security Bugs? Testing the New Wave of AI Models</title><link>https://xvnpw.github.io/posts/can-ai-actually-find-real-security-bugs-testing-the-new-wave-of-ai-models/</link><pubDate>Fri, 14 Feb 2025 16:00:00 +0100</pubDate><guid>https://xvnpw.github.io/posts/can-ai-actually-find-real-security-bugs-testing-the-new-wave-of-ai-models/</guid><description>&lt;p>Since the release of GPT-3.5, I&amp;rsquo;ve been experimenting with using Large Language Models (LLMs) to find vulnerabilities in source code. Initially, the results were underwhelming. LLMs frequently hallucinated or misidentified issues. However, the advent of &amp;ldquo;reasoning models&amp;rdquo; sparked my curiosity. Could these newer models, designed for more complex reasoning tasks, succeed where their predecessors struggled? This post documents my experiment to find out.&lt;/p>
&lt;figure class="image-center">&lt;img src="https://github.com/user-attachments/assets/746d9b98-e685-481a-8b8b-16f78f4fc32d" width="400">
&lt;/figure>

&lt;h2 id="the-challenge-llms-and-vulnerability-detection">The Challenge: LLMs and Vulnerability Detection&lt;/h2>
&lt;p>Can LLMs &lt;em>reliably&lt;/em> find vulnerabilities? It&amp;rsquo;s a complex question. Google&amp;rsquo;s &lt;a href="https://googleprojectzero.blogspot.com/2024/10/from-naptime-to-big-sleep.html">Project Zero&lt;/a> outlined a sophisticated approach involving an LLM agent, a debugger, and potentially other tools, all working together in a loop.&lt;/p></description></item></channel></rss>