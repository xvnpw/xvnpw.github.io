<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Emissary on xvnpw personal blog</title><link>https://xvnpw.github.io/tags/emissary/</link><description>Recent content in Emissary on xvnpw personal blog</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Wed, 24 Nov 2021 19:59:02 +0100</lastBuildDate><atom:link href="https://xvnpw.github.io/tags/emissary/index.xml" rel="self" type="application/rss+xml"/><item><title>Path traversal in authorization context in Emissary</title><link>https://xvnpw.github.io/posts/path_traversal_in_authorization_context_in_emissary/</link><pubDate>Wed, 24 Nov 2021 19:59:02 +0100</pubDate><guid>https://xvnpw.github.io/posts/path_traversal_in_authorization_context_in_emissary/</guid><description>After checking Apache APISIX and Traefik, for path traversal in authZ context, now I will research Emissary ingress.
In Emissary there is feature called Basic authentication, which is very similar to forward authentication discussed in Traefik.
Emissary-ingress can authenticate incoming requests before routing them to a backing service.
I can already tell you that Emissary is secure and you cannot bypass using path traversal. What is even better, it&amp;rsquo;s (and envoy) aware of this kind of security concern.</description></item></channel></rss>